{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport router from \"@/router/router\";\nimport { getIpAddress } from \"@/js/apihelper\";\n/**\n * 路由前检查函数\n * @param path\n * @param next\n */\nexport const routerbefore = (path, next) => {\n  //获取UUID，ip，time\n  const UUID = localStorage.getItem('UUID');\n  const ipAddress = localStorage.getItem('ipAddress');\n  const visitTime = localStorage.getItem('visitTime');\n  //没有UUID则赋予UUID\n  if (!UUID) {\n    localStorage.setItem('UUID', uuidv4());\n  }\n  //没有ipAddress则赋予ipAddress\n  if (!ipAddress) {\n    setIpAddress();\n  }\n  //没有visitTime则赋予visitTime\n  if (!visitTime) {\n    setVisitTime();\n  }\n  //visitTime过期则更新ipAddress和visitTime\n  else if (visitTime !== getNowTime()) {\n    setVisitTime();\n    setIpAddress();\n  }\n  //检查是手机还是电脑并跳转\n  if (path.match('/desktop/*') || path.match('/phone/*')) {\n    next();\n  } else {\n    const devicetype = (window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth) < 768 ? 'phone' : 'desktop';\n    router.replace(`/${devicetype}${path}`);\n  }\n};\nconst setIpAddress = () => {\n  const postResult = getIpAddress();\n  postResult.then(response => {\n    const ipAddress = 'location：' + response.data.country + response.data.province + response.data.area + response.data.city + ' ip：' + response.data.ip + ' isp：' + response.data.isp;\n    localStorage.setItem('ipAddress', ipAddress);\n  }).catch(e => {\n    console.log('获取用户ip出错' + e);\n  });\n};\nconst setVisitTime = () => {\n  localStorage.setItem('visitTime', getNowTime());\n};\nconst getNowTime = () => {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  const nowTime = `${year}-${month}-${day}`;\n  return nowTime;\n};","map":{"version":3,"names":["v4","uuidv4","router","getIpAddress","routerbefore","path","next","UUID","localStorage","getItem","ipAddress","visitTime","setItem","setIpAddress","setVisitTime","getNowTime","match","devicetype","window","innerWidth","document","documentElement","clientWidth","body","replace","postResult","then","response","data","country","province","area","city","ip","isp","catch","e","console","log","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","nowTime"],"sources":["/Users/ayden/Desktop/FiveCheersBlog/fcweb/src/js/routerbefore.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport router from \"@/router/router\";\nimport {getIpAddress} from \"@/js/apihelper\";\n/**\n * 路由前检查函数\n * @param path\n * @param next\n */\nexport const routerbefore = (path,next)=>{\n    //获取UUID，ip，time\n    const UUID = localStorage.getItem('UUID')\n    const ipAddress = localStorage.getItem('ipAddress')\n    const visitTime = localStorage.getItem('visitTime')\n    //没有UUID则赋予UUID\n    if (!UUID){\n        localStorage.setItem('UUID',uuidv4())\n    }\n    //没有ipAddress则赋予ipAddress\n    if (!ipAddress){\n        setIpAddress()\n    }\n    //没有visitTime则赋予visitTime\n    if (!visitTime){\n        setVisitTime()\n    }\n    //visitTime过期则更新ipAddress和visitTime\n    else if (visitTime !== getNowTime()){\n        setVisitTime()\n        setIpAddress()\n    }\n    //检查是手机还是电脑并跳转\n    if (path.match('/desktop/*') || path.match('/phone/*')){\n        next()\n    }else{\n        const devicetype = (window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth) < 768 ? 'phone' : 'desktop';\n        router.replace(`/${devicetype}${path}`)\n    }\n}\n\nconst setIpAddress = ()=>{\n    const postResult = getIpAddress()\n    postResult.then(response=>{\n        const ipAddress =\n            'location：'+response.data.country+response.data.province+response.data.area+response.data.city+\n            ' ip：'+response.data.ip+\n            ' isp：'+response.data.isp\n        localStorage.setItem('ipAddress',ipAddress)\n    }).catch(e=>{\n        console.log('获取用户ip出错'+e)\n    })\n}\n\nconst setVisitTime = ()=>{\n    localStorage.setItem('visitTime',getNowTime())\n}\n\nconst getNowTime = ()=>{\n    const date = new Date()\n    const year = date.getFullYear()\n    const month = String(date.getMonth() + 1).padStart(2,'0')\n    const day = String(date.getDate()).padStart(2, '0')\n    const nowTime = `${year}-${month}-${day}`\n    return nowTime\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}