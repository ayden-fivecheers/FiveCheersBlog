{"ast":null,"code":"export const timeCorrect = wrongTime => {\n  {\n    const utcDate = new Date(wrongTime);\n    const options = {\n      timeZone: 'Asia/Shanghai',\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    const formattedDate = new Intl.DateTimeFormat('zh-CN', options).formatToParts(utcDate).map(({\n      type,\n      value\n    }) => type === 'literal' && value === '-' ? ' ' : value).join('');\n    return formattedDate;\n  }\n};\nexport const checkAmIDead = getTime => {\n  const targetDate = new Date(getTime);\n  const currentDate = new Date();\n  const timeDifference = currentDate.getTime() - targetDate.getTime();\n  const daysDifference = timeDifference / (1000 * 3600 * 24);\n  if (daysDifference <= 30) {\n    return false;\n  } else {\n    return true;\n  }\n};","map":{"version":3,"names":["timeCorrect","wrongTime","utcDate","Date","options","timeZone","year","month","day","hour","minute","formattedDate","Intl","DateTimeFormat","formatToParts","map","type","value","join","checkAmIDead","getTime","targetDate","currentDate","timeDifference","daysDifference"],"sources":["/Users/ayden/Desktop/FiveCheersBlog/fcweb/src/js/jshelper.js"],"sourcesContent":["export const timeCorrect = (wrongTime)=>{\n    {\n        const utcDate = new Date(wrongTime);\n        const options = {\n            timeZone: 'Asia/Shanghai',\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n        };\n        const formattedDate = new Intl.DateTimeFormat('zh-CN', options)\n            .formatToParts(utcDate)\n            .map(({ type, value }) => (type === 'literal' && value === '-' ? ' ' : value))\n            .join('');\n        return formattedDate;\n    }\n}\n\nexport const checkAmIDead = (getTime)=>{\n    const targetDate = new Date(getTime);\n    const currentDate = new Date();\n    const timeDifference = currentDate.getTime() - targetDate.getTime();\n    const daysDifference = timeDifference / (1000 * 3600 * 24);\n    if (daysDifference <= 30) {\n        return false;\n    } else {\n        return true;\n    }\n}"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,SAAS,IAAG;EACpC;IACI,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;IACnC,MAAMG,OAAO,GAAG;MACZC,QAAQ,EAAE,eAAe;MACzBC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACZ,CAAC;IACD,MAAMC,aAAa,GAAG,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAET,OAAO,CAAC,CAC1DU,aAAa,CAACZ,OAAO,CAAC,CACtBa,GAAG,CAAC,CAAC;MAAEC,IAAI;MAAEC;IAAM,CAAC,KAAMD,IAAI,KAAK,SAAS,IAAIC,KAAK,KAAK,GAAG,GAAG,GAAG,GAAGA,KAAM,CAAC,CAC7EC,IAAI,CAAC,EAAE,CAAC;IACb,OAAOP,aAAa;EACxB;AACJ,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAIC,OAAO,IAAG;EACnC,MAAMC,UAAU,GAAG,IAAIlB,IAAI,CAACiB,OAAO,CAAC;EACpC,MAAME,WAAW,GAAG,IAAInB,IAAI,CAAC,CAAC;EAC9B,MAAMoB,cAAc,GAAGD,WAAW,CAACF,OAAO,CAAC,CAAC,GAAGC,UAAU,CAACD,OAAO,CAAC,CAAC;EACnE,MAAMI,cAAc,GAAGD,cAAc,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;EAC1D,IAAIC,cAAc,IAAI,EAAE,EAAE;IACtB,OAAO,KAAK;EAChB,CAAC,MAAM;IACH,OAAO,IAAI;EACf;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}